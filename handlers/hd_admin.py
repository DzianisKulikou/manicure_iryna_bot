import asyncio
from random import randint

from aiogram import Router
from environs import Env
from aiogram.types import Message
from aiogram.filters import Text

from config_data.config import load_config
from lexicon.evidence import evidence

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router: Router = Router()

# –ü–æ–ª—É—á–∞–µ–º id –∫–∞–Ω–∞–ª–æ–≤ –±—å—é—Ç–∏ –∏ –Ω–∞—à–∞ –∏–∑ .env
env = Env()  # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Env
env.read_env()  # –ú–µ—Ç–æ–¥–æ–º read_env() —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª .env –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –Ω–µ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
config = load_config('.env')
CHANNEL_ID_NA = config.tg_bot.channel_id_na
CHANNEL_ID = config.tg_bot.channel_id


# –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –õ–° id —á–∞—Ç–∞
# await bot.send_message(message.from_user.id, message.chat.id)

# –ü—Ä–∞–≤–∏–ª–∞ –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –±—å—é—Ç–∏
@router.message(Text(text='–ø—Ä–∞–≤–∏–ª–∞'))
async def process_dog_answer(message: Message, bot=None):
    print(message.chat.id)
    while True:
        await bot.send_message(
            chat_id=CHANNEL_ID,
            text='<b>–¶–ï–õ–¨ –ì–†–£–ü–ü–´:</b>\n–ü–æ–∏—Å–∫ –º–∞—Å—Ç–µ—Ä–æ–≤, –º–æ–¥–µ–ª–µ–π –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –í–∞—Ä—à–∞–≤–µ –∏–∑ –ª—é–±–æ–π –±—å—é—Ç–∏ —Å—Ñ–µ—Ä—ã!\n'
                 '<b>–ü–†–ê–í–ò–õ–ê –ì–†–£–ü–ü–´:</b>\n\n<b>1)</b> –í –≥—Ä—É–ø–ø–µ –º–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ª—é–±—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ '
                 '–±—å—é—Ç–∏ —Å—Ñ–µ—Ä–µ –≤ –í–∞—Ä—à–∞–≤–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ (–ø–æ–∏—Å–∫ –º–∞—Å—Ç–µ—Ä–æ–≤, –ø–æ–∏—Å–∫ –º–æ–¥–µ–ª–µ–π, –ø–µ—Ä–µ—á–µ–Ω—å –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö '
                 '—É—Å–ª—É–≥ –∏ —Ç.–¥.)!\n<b>2)</b> –î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏!\n<b>3)</b> '
                 '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –Ω–∞—Ä—É—à–∞—Ç—å –∑–∞–∫–æ–Ω–æ–≤ –†–ü!\n<b>4)</b> –Ø–∑—ã–∫–∏ –æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ: üáßüáæüá∫üá¶üáµüá±üá∑üá∫üá¨üáß')
        await asyncio.sleep(172800)  # 2 —Å—É—Ç–æ–∫


# –°–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç'
@router.message(Text(text='–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç'))
async def process_dog_answer(message: Message, bot=None):
    print(message.chat.id)
    lst = []
    while True:
        key = randint(1, 100)
        if len(lst) == 60:
            lst = []
        elif key in lst:
            continue
        else:
            await bot.send_message(chat_id=CHANNEL_ID, text=evidence[key])
            lst.append(key)
            await asyncio.sleep(10800)  # 3 —á–∞—Å–∞
